<Page x:Class="StoreApp.MVVM.View.Pages.AccessLevelsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:StoreApp.MVVM.View.Pages"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:vm ="clr-namespace:StoreApp.MVVM.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="AccessLevelsPage">

    <!--<Page.DataContext>
        <vm:AccessLevelsViewModel/>
    </Page.DataContext>-->

    <DockPanel>
        <Grid DockPanel.Dock="Bottom" Background="White" Height="{Binding Path=OpenChangeEmployeeGridHeight,UpdateSourceTrigger=PropertyChanged}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" materialDesign:HintAssist.Hint="Имя" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Bottom" Text="{Binding Path=SelectedAccessLevel.Name}" Cursor="IBeam"/>
            <Button Grid.Column="1" Content="Сохранить" Style="{StaticResource MaterialDesignFlatButton}" Padding="0"
                    Command="{Binding Path=ChangeEmployeeCommand}"/>
            <Button Grid.Column="2" Content="Закрыть" Padding="0" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding Path=CloseChangeGridCommand}"/>
        </Grid>
        <StackPanel DockPanel.Dock="Top">
            <Menu>
                <MenuItem Header="Добавить" Height="45" Command="{Binding AddAccessLevelGridVisibilityCommand}"/>
            </Menu>
            <Grid Background="White" Visibility="{Binding Path=AddAccessLevelGridVisibility,UpdateSourceTrigger=PropertyChanged}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.15*"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" materialDesign:HintAssist.Hint="Имя" Text="{Binding Path=NewAccessLevel.Name,UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Bottom" Cursor="IBeam"/>
                <Button Grid.Column="1" Content="Сохранить" Style="{StaticResource MaterialDesignFlatButton}" Padding="0" Command="{Binding Path=AddNewAccessLevelCommand}"/>
            </Grid>
            
        </StackPanel>
        <ScrollViewer DockPanel.Dock="Left" Background="White">
            <DataGrid ItemsSource="{Binding Path=AccessLevels,UpdateSourceTrigger=PropertyChanged}" 
                              AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" 
                              SelectedItem="{Binding Path=SelectedAccessLevel,UpdateSourceTrigger=PropertyChanged}">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Удалить" Command="{Binding Path=DeleteAcessLevelCommand}"/>
                        <MenuItem Header="Изменить"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Id" Binding="{Binding Path= Id}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Users Count" Binding="{Binding Path=Users.Count}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Employees Count" Binding="{Binding Path=Employees.Count}" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>

    </DockPanel>
</Page>
